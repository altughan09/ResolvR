using System.Configuration;
using System.Reflection;
using Microsoft.EntityFrameworkCore;
using ResolvR.Application.Extensions;
using ResolvR.Infrastructure.Extensions;
using ResolvR.Infrastructure.Persistence;
using Serilog;

namespace ResolvR;

public class Program
{
    public static void Main(string[] args)
    {
        var builder = WebApplication.CreateBuilder(args);

        // Add services to the container.
        builder.Host.UseSerilog((context, configuration) =>
        {
            configuration.ReadFrom.Configuration(context.Configuration);
        });

        builder.Services.AddControllers();
        builder.Services.AddEndpointsApiExplorer();
        builder.Services.AddSwaggerGen(opt =>
        {
            //Locate the XML file being generated by ASP.NET...
            var xmlFile = $"{Assembly.GetExecutingAssembly().GetName().Name}.xml";
            var xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile);

            //... and tell Swagger to use those XML comments.
            opt.IncludeXmlComments(xmlPath, includeControllerXmlComments: true);
        });
        
        builder.Services.AddApplication();
        builder.Services.AddInfrastructure();
        
        builder.Services.AddDbContext<ApplicationDbContext>(dbContextOptions =>
        {
            dbContextOptions.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection"),
                options =>
                {
                    options.MigrationsAssembly(typeof(ApplicationDbContext).Assembly.FullName);
                });

            if (builder.Environment.IsDevelopment())
            {
                dbContextOptions.EnableDetailedErrors();
            }
        });
        
        var app = builder.Build();

        if (app.Environment.IsDevelopment())
        {
            app.UseSwagger();
            app.UseSwaggerUI();
        }

        app.UseHttpsRedirection();

        app.UseSerilogRequestLogging();
        
        app.UseAuthorization();


        app.MapControllers();

        app.Run();
    }
}